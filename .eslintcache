[{"C:\\Users\\Admin\\Desktop\\work\\react-dnd-test\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\work\\react-dnd-test\\src\\App.js":"2","C:\\Users\\Admin\\Desktop\\work\\react-dnd-test\\src\\reportWebVitals.js":"3","C:\\Users\\Admin\\Desktop\\work\\react-dnd-test\\src\\components\\Navbar.js":"4","C:\\Users\\Admin\\Desktop\\work\\react-dnd-test\\src\\components\\Logo.js":"5","C:\\Users\\Admin\\Desktop\\work\\react-dnd-test\\src\\components\\ExpandMoreListItem.js":"6","C:\\Users\\Admin\\Desktop\\work\\react-dnd-test\\src\\components\\PopoverContent.js":"7","C:\\Users\\Admin\\Desktop\\work\\react-dnd-test\\src\\components\\Main.js":"8","C:\\Users\\Admin\\Desktop\\work\\react-dnd-test\\src\\components\\DroppableCards.js":"9","C:\\Users\\Admin\\Desktop\\work\\react-dnd-test\\src\\components\\SliderSection.js":"10","C:\\Users\\Admin\\Desktop\\work\\react-dnd-test\\src\\contexts\\CardsContextProvider.js":"11","C:\\Users\\Admin\\Desktop\\work\\react-dnd-test\\src\\components\\PageHeader.js":"12","C:\\Users\\Admin\\Desktop\\work\\react-dnd-test\\src\\components\\Footer.js":"13","C:\\Users\\Admin\\Desktop\\work\\react-dnd-test\\src\\components\\AdsetsManagement.js":"14","C:\\Users\\Admin\\Desktop\\work\\react-dnd-test\\src\\components\\MenuDialog.js":"15"},{"size":624,"mtime":1609855009756,"results":"16","hashOfConfig":"17"},{"size":182,"mtime":1609844895274,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":3453,"mtime":1610101169597,"results":"20","hashOfConfig":"17"},{"size":247,"mtime":1609775247554,"results":"21","hashOfConfig":"17"},{"size":1475,"mtime":1609941465948,"results":"22","hashOfConfig":"17"},{"size":399,"mtime":1609778561490,"results":"23","hashOfConfig":"17"},{"size":812,"mtime":1610101040855,"results":"24","hashOfConfig":"17"},{"size":6815,"mtime":1609950084041,"results":"25","hashOfConfig":"17"},{"size":1633,"mtime":1609937179194,"results":"26","hashOfConfig":"17"},{"size":1702,"mtime":1609937806983,"results":"27","hashOfConfig":"17"},{"size":2430,"mtime":1610100932806,"results":"28","hashOfConfig":"17"},{"size":964,"mtime":1609942275601,"results":"29","hashOfConfig":"17"},{"size":1857,"mtime":1610101081000,"results":"30","hashOfConfig":"17"},{"size":1843,"mtime":1610100885992,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"17oekuk",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Admin\\Desktop\\work\\react-dnd-test\\src\\index.js",[],["65","66"],"C:\\Users\\Admin\\Desktop\\work\\react-dnd-test\\src\\App.js",[],"C:\\Users\\Admin\\Desktop\\work\\react-dnd-test\\src\\reportWebVitals.js",[],"C:\\Users\\Admin\\Desktop\\work\\react-dnd-test\\src\\components\\Navbar.js",[],"C:\\Users\\Admin\\Desktop\\work\\react-dnd-test\\src\\components\\Logo.js",[],"C:\\Users\\Admin\\Desktop\\work\\react-dnd-test\\src\\components\\ExpandMoreListItem.js",[],"C:\\Users\\Admin\\Desktop\\work\\react-dnd-test\\src\\components\\PopoverContent.js",[],"C:\\Users\\Admin\\Desktop\\work\\react-dnd-test\\src\\components\\Main.js",["67"],"C:\\Users\\Admin\\Desktop\\work\\react-dnd-test\\src\\components\\DroppableCards.js",["68","69","70","71","72"],"import React, {useState} from 'react';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  CardHeader, Container,\r\n  Grid,\r\n  IconButton,\r\n  List,\r\n  ListItem, ListItemIcon, ListItemText, Paper\r\n} from '@material-ui/core';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport {DragDropContext, Draggable, Droppable} from 'react-beautiful-dnd';\r\nimport {useCardsContext} from '../contexts/CardsContextProvider';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\n\r\nconst DroppableCards = () => {\r\n  const {cards, setCards} = useCardsContext();\r\n  const [startDroppableId, setStartDroppableId] = useState(null);\r\n\r\n  const reorder = (list, startIndex, endIndex) => {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n\r\n    result.splice(endIndex, 0, removed);\r\n\r\n    return result;\r\n  };\r\n\r\n  const move = (source, destination, droppableSource, droppableDestination) => {\r\n    const sourceClone = Array.from(source);\r\n    const destClone = Array.from(destination);\r\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n\r\n    destClone.splice(droppableDestination.index, 0, removed);\r\n\r\n    const result = {};\r\n    result[droppableSource.droppableId] = sourceClone;\r\n    result[droppableDestination.droppableId] = destClone;\r\n\r\n    return result;\r\n  };\r\n\r\n  const onDragStart = ({source}) => {\r\n    setStartDroppableId(source.droppableId);\r\n  };\r\n\r\n  const onDragEnd = ({source, destination}) => {\r\n    setStartDroppableId(null);\r\n\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    if (source.droppableId === destination.droppableId) {\r\n      const items = reorder(\r\n        cards[source.droppableId].dragList,\r\n        source.index,\r\n        destination.index\r\n      );\r\n\r\n      setCards(prevCards => (\r\n        prevCards.map((card, i) => (\r\n          i == source.droppableId ? {...card, dragList: items} : card\r\n        ))\r\n      ));\r\n    } else {\r\n      const result = move(\r\n        cards[source.droppableId].dragList,\r\n        cards[destination.droppableId].dragList,\r\n        source,\r\n        destination\r\n      );\r\n\r\n      setCards(prevCards => (\r\n        prevCards.map((card, i) => {\r\n          if (i == source.droppableId) {\r\n            return {...card, dragList: result[source.droppableId]};\r\n          }\r\n\r\n          if (i == destination.droppableId) {\r\n            return {...card, dragList: result[destination.droppableId]};\r\n          }\r\n\r\n          return card;\r\n        })\r\n      ));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEnd} onDragStart={onDragStart}>\r\n      <Container>\r\n        <Grid container spacing={4} justify={'center'}>\r\n          {cards.map((card, i) => (\r\n            <Grid key={`card-${i}`} item lg={3} md={4} sm={6} xs={8}>\r\n              <Card style={{\r\n                transition: 'border 0.5s',\r\n                border: startDroppableId && i != startDroppableId\r\n                  ? '2px solid purple'\r\n                  : '2px solid transparent'\r\n              }}>\r\n                <CardHeader\r\n                  subheader={card.label}\r\n                  action={\r\n                    <IconButton\r\n                      style={{\r\n                        background: '#84889d',\r\n                        color: 'white',\r\n                        borderRadius: 20,\r\n                        padding: '4px 20px'\r\n                      }}>\r\n                      <MoreHorizIcon style={{width: 16, height: 16}}/>\r\n                    </IconButton>}\r\n                >\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <Droppable droppableId={`${i}`}>\r\n                    {(provided, snapshot) => (\r\n                      <List\r\n                        ref={provided.innerRef}\r\n                      >\r\n                        {card.dragList.map((item, index) => (\r\n                          <Draggable\r\n                            key={item.name}\r\n                            draggableId={item.name}\r\n                            index={index}>\r\n                            {(provided, snapshot) => (\r\n                              <ListItem\r\n                                disableGutters\r\n                                component={Paper}\r\n                                ref={provided.innerRef}\r\n                                {...provided.draggableProps}\r\n                                {...provided.dragHandleProps}\r\n                                style={{\r\n                                  margin: '10px 0 0 0',\r\n                                  background: snapshot.isDragging ? 'gray' : 'white',\r\n                                  color: snapshot.isDragging ? 'white' : 'black',\r\n                                  transition: '20s',\r\n                                  ...provided.draggableProps.style\r\n                                }}\r\n                              >\r\n                                <Grid container justify={'space-between'} alignItems={'center'}>\r\n                                  <Grid container xs={5} item justify={'flex-start'}\r\n                                        alignItems={'center'}>\r\n                                    <Grid item lg={5}>\r\n                                      <ListItemIcon>\r\n                                        <MoreVertIcon/>\r\n                                      </ListItemIcon>\r\n                                    </Grid>\r\n                                    <Grid item xs={5}>\r\n                                      <ListItemText primary={item.name}/>\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                  <Grid container xs={5} item justify={'flex-end'}\r\n                                        alignItems={'center'}>\r\n                                    <Grid item xs={5}>\r\n                                      <ListItemText primary={item.value}/>\r\n                                    </Grid>\r\n                                    <Grid item xs={5}>\r\n                                      <ListItemIcon>\r\n                                        <HighlightOffIcon fontSize={'small'}/>\r\n                                      </ListItemIcon>\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                </Grid>\r\n                              </ListItem>\r\n                            )}\r\n                          </Draggable>\r\n                        ))}\r\n                        {provided.placeholder}\r\n                      </List>\r\n                    )}\r\n                  </Droppable>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n    </DragDropContext>\r\n  );\r\n};\r\n\r\nexport default DroppableCards;","C:\\Users\\Admin\\Desktop\\work\\react-dnd-test\\src\\components\\SliderSection.js",[],"C:\\Users\\Admin\\Desktop\\work\\react-dnd-test\\src\\contexts\\CardsContextProvider.js",["73"],"import React, {createContext, useCallback, useContext, useEffect, useState} from 'react';\r\n\r\nconst CardsContext = createContext('cards');\r\n\r\nexport const useCardsContext = () => useContext(CardsContext);\r\n\r\nconst CardsContextProvider = ({children}) => {\r\n  const list = [\r\n    {name: 'World', value: 125},\r\n    {name: 'Cup', value: 125},\r\n    {name: 'House', value: 452},\r\n    {name: 'Numbers', value: 340},\r\n    {name: 'Hero', value: 452},\r\n    {name: 'Band', value: 340},\r\n    {name: 'Hetzner', value: 125},\r\n    {name: 'Minimal', value: 125},\r\n    {name: 'Digital', value: 452},\r\n    {name: 'Maos', value: 452},\r\n    {name: 'Cats', value: 340},\r\n    {name: 'Soft', value: 340},\r\n    {name: 'Samsung', value: 125},\r\n    {name: 'Students', value: 125},\r\n    {name: 'Cola', value: 452},\r\n    {name: 'Sprite', value: 340},\r\n    {name: 'Tea', value: 340},\r\n    {name: 'Coffee', value: 340}\r\n  ];\r\n\r\n  const [cardsCount, setCardsCount] = useState(6);\r\n\r\n  const getCards = useCallback(() => {\r\n    const cardListLength = Math.ceil(list.length / cardsCount);\r\n\r\n    return new Array(cardsCount).fill(0).map((_, i) => {\r\n      const initDragList = list.slice(i * cardListLength, i * cardListLength + cardListLength);\r\n\r\n      return {\r\n        label: `Test Adset ${i + 1}`,\r\n        dragList: initDragList\r\n      };\r\n    });\r\n  }, [cardsCount]);\r\n\r\n  const [cards, setCards] = useState(getCards());\r\n\r\n  useEffect(() => {\r\n    setCards(getCards());\r\n  }, [cardsCount, getCards]);\r\n\r\n  return (\r\n    <CardsContext.Provider\r\n      value={{\r\n        cardsCount, setCardsCount,\r\n        cards, setCards\r\n      }}>\r\n      {children}\r\n    </CardsContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CardsContextProvider;","C:\\Users\\Admin\\Desktop\\work\\react-dnd-test\\src\\components\\PageHeader.js",[],"C:\\Users\\Admin\\Desktop\\work\\react-dnd-test\\src\\components\\Footer.js",[],"C:\\Users\\Admin\\Desktop\\work\\react-dnd-test\\src\\components\\AdsetsManagement.js",[],"C:\\Users\\Admin\\Desktop\\work\\react-dnd-test\\src\\components\\MenuDialog.js",["74"],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":2,"column":14,"nodeType":"81","messageId":"82","endLine":2,"endColumn":23},{"ruleId":"79","severity":1,"message":"83","line":3,"column":3,"nodeType":"81","messageId":"82","endLine":3,"endColumn":6},{"ruleId":"84","severity":1,"message":"85","line":65,"column":13,"nodeType":"86","messageId":"87","endLine":65,"endColumn":15},{"ruleId":"84","severity":1,"message":"85","line":78,"column":17,"nodeType":"86","messageId":"87","endLine":78,"endColumn":19},{"ruleId":"84","severity":1,"message":"85","line":82,"column":17,"nodeType":"86","messageId":"87","endLine":82,"endColumn":19},{"ruleId":"84","severity":1,"message":"88","line":100,"column":47,"nodeType":"86","messageId":"87","endLine":100,"endColumn":49},{"ruleId":"89","severity":1,"message":"90","line":42,"column":6,"nodeType":"91","endLine":42,"endColumn":18,"suggestions":"92"},{"ruleId":"79","severity":1,"message":"80","line":5,"column":16,"nodeType":"81","messageId":"82","endLine":5,"endColumn":25},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Box' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'list'. Either include it or remove the dependency array.","ArrayExpression",["95"],"no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},"Update the dependencies array to be: [cardsCount, list]",{"range":"98","text":"99"},[1326,1338],"[cardsCount, list]"]